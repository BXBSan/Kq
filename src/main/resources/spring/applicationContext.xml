<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- spring start... -->
    <!-- 注解扫描 -->
    <context:component-scan base-package="com.epro.kq"/>

    <!-- 开启注解驱动 -->
    <mvc:annotation-driven/>

    <!-- 试图解析器 -->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 静态资源访问 -->
    <mvc:default-servlet-handler/>
    <!-- Spring end -->

    <!-- mybatis start 整合配置 -->
    <!-- 导入属性配置文件 -->
    <context:property-placeholder location="classpath:config/jdbc.properties" />

    <!-- 数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <!--<property name="username" value="${jdbc.username} "/>
        <property name="password" value="${jdbc.password} "/>-->
    </bean>

    <!-- sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
    </bean>

    <!-- 加入Mybatis的注解扫描，在用到时可以用@Repository注解注入 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
        <property name="basePackage" value="com.epro.kq.mappers"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!-- mybatis end 配置结束 -->

    <!-- 登录验证-拦截器配置 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 拦截指定url -->
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/login/**"/><!-- 不拦截 -->
            <mvc:exclude-mapping path="/static/amazeui/**" />
            <bean class="com.epro.kq.interceptor.MySecurityInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 返回json 需要导入 fastjson.jar包 -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- json配置结束 -->

    <!-- 文件上传视图解析器 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
        <!--1024*1024*100即100M-->
        <property name="maxUploadSize" value="104857600" />
    </bean>

    <!--事务管理配置开始-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="defaultTransactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="serviceBean" expression="execution(* com.epro.kq.service.*.*(..))"/>
        <aop:advisor advice-ref="defaultTransactionAdvice" pointcut-ref="serviceBean"/>
    </aop:config>
    <!--事务管理配置结束-->
</beans>